import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import { BrowserRouter as Router, Route } from 'react-router-dom';
import { connect } from 'react-redux';
import { withStyles } from '@material-ui/core/styles/index';
import Drawer from '@material-ui/core/Drawer';
import Divider from '@material-ui/core/Divider';
import List from '@material-ui/core/List';
import HomeIcon from '@material-ui/icons/Home';
import LabelIcon from '@material-ui/icons/Label';
import Home from './components/home/index'
import Tagger from './components/tagger/index'
import DrawerIcon from './components/shared/drawerIcon'
import withRoot from './styles/withRoot';


const drawerWidth = 340;

const styles = theme => ({
  root: {
    flexGrow: 1,
    zIndex: 1,
    overflow: 'hidden',
    position: 'relative',
    display: 'flex',
  },
  appBar: {
    zIndex: theme.zIndex.drawer + 1,
  },
  flex: {
    flex: 1,
  },
  drawerPaper: {
    height: '100%',
    minHeight: '100vh',
    position: 'relative',
    whiteSpace: 'nowrap',
    width: drawerWidth,
  },
  drawerPaperClose: {
    overflowX: 'hidden',
    width: drawerWidth,
    [theme.breakpoints.up('sm')]: {
      width: theme.spacing.unit * 9,
    },
  },
  toolbar: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'flex-end',
    padding: '0 8px',
    ...theme.mixins.toolbar,
  },
  drawerList: {
    paddingTop: 0,
    paddingBottom: 0
  }
});

const mapDispatchToProps = dispatch => ({
});

class AppComponent extends React.Component {

  render() {
    const { classes } = this.props;

    return <Router>
      <div className={classes.root}>
        <Drawer
          variant="permanent"
          classes={{
            paper: classNames(classes.drawerPaper, classes.drawerPaperClose),
          }}
        >
          <List className={classes.drawerList}>
            <DrawerIcon icon={<HomeIcon/>} title={"Home"} link={'/'}/>
            <Divider />
            <DrawerIcon icon={<LabelIcon/>} title={"Tagger"} link={'/tagger'}/>
            <Divider />
          </List>
        </Drawer>
        <Route exact path="/" component={Home}/>
        <Route exact path="/tagger" component={Tagger}/>
      </div>
    </Router>;
  }
}

AppComponent.propTypes = {
  classes: PropTypes.object.isRequired,
  theme: PropTypes.object.isRequired,
};

const App = connect(null, mapDispatchToProps)(AppComponent);

export default withRoot(withStyles(styles, { withTheme: true })(App));
