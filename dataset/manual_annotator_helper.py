import json


def prob_ret_annot(cve, pattern, type_):
    start_idx = cve.index(pattern)
    return [start_idx, start_idx + len(pattern), type_]


def annotate_vuln(elem):
    u_input = ''
    annotations = []
    while u_input != 'ciao':
        print elem[0]
        print
        u_input = raw_input("Vuln annotator >")
        if u_input == 'ciao':
            continue
        annotations += prob_ret_annot(elem[0], u_input, "VULNERABILITY")
    return json.dumps(annotations)


def annotate_caps(elem):
    u_input = ''
    annotations = []
    while u_input != 'ciao':
        u_input = raw_input("Caps annotator >")
        if u_input == 'ciao':
            continue
        annotations += prob_ret_annot(elem[0], u_input, "CAPABILITY")
    return json.dumps(annotations)


with open("./annotated_cve_linux_kernel_2018_NER_train.json", 'r') as f:
    f2 = json.load(f)
    for elem in f2:
        vulns = annotate_vuln(elem)
        print vulns
        caps = annotate_caps(elem)
        print caps
